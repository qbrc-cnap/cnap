[DEFAULT]
# the maximum number of concurrent transfers.  This (hopefully) prevents us from overwhelming the storage providers 
# with too many connections
max_transfers = 50

# how many seconds to sleep between checks when transfers get queued
sleep_period = 60

[dropbox]
# These are settings that are specific only to Dropbox, regardless of the compute environment (AWS, GCP)

# the path (in the user's dropbox) where the downloaded files will be pushed to:
dropbox_destination_folderpath = /transferred_files



[google_drive]
# These are settings that are specific only to Drive, regardless of the compute environment (AWS, GCP)




[google]
# These are settings specific to running a download in Google environment regardless of the destination
# (transferring to Dropbox, Drive, etc.)

# the machine-spec:
machine_type = g1-small

# minimum size of the disk (in gigabytes)
min_disk_size = 10

# if we have a large file that exceeds the minimum disk size,
# then make the disk size to be this many times the filesize (approx)
# e.g. if the file is 12Gb, setting disk_size_factor = 2 would create a
# VM with size 24Gb
disk_size_factor = 2

# scope given to the VM.  We need to be able to destroy the machine when
# the work is complete.
scopes = https://www.googleapis.com/auth/cloud-platform


[aws]
# These are settings specific to running a download in AWS environment regardless of the destination
# (e.g. transferring to dropbox, drive, etc.)


[dropbox_in_google]
# These are settings that are specific to running a download to Dropbox FROM Google storage

# a docker image that actually runs the download process (i.e. downloads from Dropbox and pushes to 
# some cloud-based storage)
docker_image = docker.io/blawney/dropbox_in_google

# a prefix for the VM name
# if this variable is foo-bar, then the VMs created will be something like
# foo-bar-<datetime>-<integer>
# The attempt here is to come up with a unique name
instance_name_prefix = dropbox-download



[drive_in_google]
# These are settings that are specific to running a download to Google Drive FROM Google storage

# a docker image that runs the download process
docker_image = docker.io/blawney/drive_in_google

# a prefix for the VM name
# if this variable is foo-bar, then the VMs created will be something like
# foo-bar-<datetime>-<integer>
# The attempt here is to come up with a unique name
instance_name_prefix = drive-download

